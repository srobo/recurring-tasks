#!/usr/bin/env python3

import textwrap
from pathlib import Path

queue = {input("Enter ticket to create: ")}

while queue:
    target = queue.pop()

    print("-- {} --".format(target))

    summary = input("Summary: ")

    priority = input("Priority [should]: ")
    if not priority:
        priority = 'should'

    component = input("Component [Competition]: ")
    if not component:
        component = 'Competition'

    milestone = '$SRYYYY Competition'

    desc_lines = []
    while True:
        desc_line = input("Description [empty for end]: ")
        if not desc_line:
            break
        desc_lines.append(desc_line)
    desc = "\n".join(desc_lines)

    deps = []
    while True:
        dependency = input("Dependency [empty for end]: ")
        if not dependency:
            break
        deps.append(dependency)
        dep_path = Path(dependency).with_suffix('.yaml')
        if not dep_path.exists():
            queue.add(dependency)

    ticket_path = Path(target).with_suffix('.yaml')

    try:
        ticket_path.parent.mkdir(parents=True)
    except FileExistsError:
        pass

    with Path(target).with_suffix('.yaml').open('w') as f:
        f.write(f"summary: {summary}\n\n")
        f.write(f"priority: {priority}\n\n")
        f.write(f"component: {component}\n\n")
        f.write(f"milestone: {milestone}\n\n")
        f.write('description: >-\n')
        desc = textwrap.fill(desc)
        f.write(textwrap.indent(desc, "  ").rstrip())
        f.write("\n")
        if deps:
            f.write("\ndependencies:\n")
            for dep in deps:
                f.write(f"  - {dep}\n")
