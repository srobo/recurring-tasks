summary: Update and setup the SRComp system for the $SRYYYY competition

priority: could

component: Competition

milestone: $SRYYYY Competition

area-owner: game

description: >-
  # from comp/ops/compstate.yaml
  ## Prepare the $SRYYYY compstate

  The competition software has state about the competition which is used to
  drive the matches, live displays of scores (etc.) both within the venue on
  the website.

  This task is to create the initial state for the competition; see
  https://github.com/PeterJCLaw/srcomp/wiki/Competition-Preparation#create-a-compstate
  and https://github.com/search?q=topic%3Acompstate+org%3Asrobo&type=Repositories.

  # from comp/game/score-script.yaml
  ## Write scoring scripts for the $SRYYYY game

  The scoring script provides automatic computation of the scores based on the
  data input from the score sheets.

  See https://github.com/PeterJCLaw/srcomp/wiki/Competition-Preparation#implement-scorepy for details.

  # from comp/ops/deploy-score-entry.yaml
  ## Deploy the score entry system

  The machine which will be used for score entry need setting up.
  At least one of these is expected to be a permanent machine placement.

  This should also include confirming that the relevant pages and ops
  software things can be accessed.

  # from comp/ops/deploy-compbox.yaml
  ## Deploy the Compbox

  The compbox VM will need deploying onto the host machine and ensuring
  that it works.

  This should also include confirming that it's got a static name/address
  and that the relevant pages can be seen from other machines.

  # from comp/ops/deploy.yaml
  ## Deploy Ops for the $SRYYYY Competition

  Ops needs a table and network connection to work from. It should be
  located somewhere protected from the competitors, but vaguely near
  the arena so the people manning it can see what's going on and easily
  communicate with Score Entry and the Head Judge.

  # from comp/ops/prepare-compbox.yaml
  ## Prepare the in-venue Compbox

  We have a Raspberry Pi 3 (part code `srL1CX`) which is typically used
  as the compbox.

  This task is to prepare the micro SD card and validate that the Pi itself
  functions, so that deployment in the venue is as simple as plugging the Pi
  into the competition network.

  The steps here are usually:

  1. Flash the SD card with the latest Raspbian stable

  2. Clone https://github.com/PeterJCLaw/srcomp-puppet onto the Pi

  3. Run `srcomp-puppet/scripts/install` on the Pi

  4. Use the `scripts/check-pages.py` to validate from outside the Pi that
  the expected pages can be reached

  # from comp/ops/public-compbox.yaml
  ## Deploy a public compbox

  The competition software has state about the competition which is used
  to drive the live displays of scores (etc.) on the website. We need a
  publicly visible host of this information.

  This has historically been a Digital Ocean VM running the latest Ubuntu LTS
  configured using https://github.com/PeterJCLaw/srcomp-puppet.

dependencies:
  - comp/day-schedule
  - comp/game/knockout-design
  - comp/game/league-schedule
  - comp/game/score-format
  - comp/game/shepherding
  - comp/pits/layout
  - comp/venue/layout
  - comp/arena/network
  - comp/arena/power
  - comp/game/score-entry
  - comp/ops/score-entry-hardware
  - comp/pre-comp-storage-trip
