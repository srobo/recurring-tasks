version: 2

jobs:
  self-check:
    docker:
      - image: cimg/python:3.13

    steps:
      - checkout

        # Set up a cached virtualenv in which to install things
      - restore_cache:
          name: Restore build dependency cache
          key: deps-2-venv-{{ .Branch }}-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "scripts/requirements-dev.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r scripts/requirements-dev.txt
      - save_cache:
          name: Save build dependency cache
          key: deps-2-venv-{{ .Branch }}-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "scripts/requirements-dev.txt" }}
          paths:
            - "venv"

      - run:
          command: scripts/linting/lint
          environment:
            FLAKE8: venv/bin/flake8
      - run:
          command: scripts/typing/check
          environment:
            MYPY: venv/bin/mypy

  validate:
    docker:
      - image: cimg/python:3.13

    steps:
      - checkout

        # Set up a cached virtualenv in which to install things
      - restore_cache:
          name: Restore build dependency cache
          key: deps-2-venv-{{ .Branch }}-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "scripts/requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r scripts/requirements.txt
      - save_cache:
          name: Save build dependency cache
          key: deps-2-venv-{{ .Branch }}-{{ .Environment.CIRCLE_STAGE }}-{{ checksum "scripts/requirements.txt" }}
          paths:
            - "venv"

      - run:
          name: Validate reachability
          command: |
            . venv/bin/activate
            ./scripts/validate comp/main
            ./scripts/validate kickstart/main
            ./scripts/validate test/main


workflows:
  version: 2
  validate:
    jobs:
      - self-check
      - validate
